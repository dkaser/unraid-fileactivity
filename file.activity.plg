<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name       "file.activity">
<!ENTITY author     "dlandon">
<!ENTITY version    "2017.02.21a">
<!ENTITY launch		"Tools/FileActivity">
<!ENTITY pluginURL	"https://github.com/dlandon/file.activity/raw/master/file.activity.plg">
<!ENTITY MD5		"2400e995677f9422875704357bcf77c4">
]>

<PLUGIN  name="&name;"
         author="&author;"
         version="&version;"
         launch="&launch;"
         pluginURL="&pluginURL;">

<CHANGES>
##&name;
###&version;
- Fix: Only first nine disks were included in inotify.

###2017.02.21
- Fix: Get list of disks to monitor from a file and not from the command line.
- Add: Setting to adjust the max_user_watches.

###2017.02.19
- Add: Limit the number of lines in the File Activity log to 20,000 to prevent it growing excessively large.

###2017.02.18a
- Add: Settings so Unassigned Devices and Cache disk can be excluded.
- Add: Enable/disable service to start/stop File Activity logging with the array start/stop.

###2017.02.17
- Add: File open event so file reads are now logged.

###2017.02.16c
- Fix: Changed to inotify to log all write file activity.

###2017.02.14
- Add: Additional help text.

###2017.02.12
- Initial release.
</CHANGES>

<!--
Copyright 2017, Dan Landon
This is the webGUI plugin to view disk file activity.
-->

<!--
The 'pre-install' script.
-->
<FILE Run="/bin/bash">
<INLINE>
if [ -x /usr/local/emhttp/plugins/&name;/scripts/rc.&name; ]; then
	# Stop file activity.
	/usr/local/emhttp/plugins/&name;/scripts/rc.&name; stop 2>/dev/null
fi

# Remove emhttp files so we can re-install.
rm -rf /usr/local/emhttp/plugins/&name;/* 2>/dev/null

# Remove old 'bundle' files.
rm -f $(ls /boot/config/plugins/&name;/&name;*.tgz 2>/dev/null | grep -v '&version;')
</INLINE>
</FILE>

<!--
Get the plugin bundle.
-->
<FILE Name="/boot/config/plugins/&name;/&name;-&version;.tgz">
<URL>"https://github.com/dlandon/&name;/raw/master/&name;-&version;.tgz"</URL>
<MD5>&MD5;</MD5>
</FILE>

<!--
Install the plugin bundle.
-->
<FILE Run="/bin/bash">
<INLINE>
# Create plugin directory
mkdir /boot/config/plugins/&name; 2>/dev/null

# Install the 'bundle'.
tar -xf /boot/config/plugins/&name;/&name;-&version;.tgz -C /usr/local/emhttp/plugins 2>/dev/null

# Adjust plugin permissions.
chmod 755 -R /usr/local/emhttp/plugins/&name; 2>/dev/null
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/&name;/&name;.cfg">
<INLINE>
<![CDATA[
SERVICE="disable"
INCLUDE_UD="yes"
INCLUDE_CACHE="yes"
MAX_WATCHES="524288"
]]>
</INLINE>
</FILE>

<!--
The 'post-install' script.
-->
<FILE Run="/bin/bash">
<INLINE>
CONFIG="/boot/config/plugins/&name;/&name;.cfg"
source $CONFIG

# Create disks file directory.
mkdir /tmp/&name; 2>/dev/null

# Start file activity if it is enabled.
if [ "$SERVICE" = "enable" ]; then
	/usr/local/emhttp/plugins/&name;/scripts/rc.&name; start
fi

echo ""
echo "-----------------------------------------------------------"
echo " Plugin &name; is installed."
echo " Copyright 2017, Dan Landon"
echo " Version: &version;"
echo "-----------------------------------------------------------"
echo ""
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
# Stop file activity.
/usr/local/emhttp/plugins/file.activity/scripts/rc.file.activity stop 2>/dev/null

# Remove all plugin files.
rm -rf /boot/config/plugins/&name; 2>/dev/null
rm -rf /usr/local/emhttp/plugins/&name; 2>/dev/null

echo ""
echo "-----------------------------------------------------------"
echo " Plugin &name; has been removed."
echo " Version: &version;"
echo "-----------------------------------------------------------"
echo ""
</INLINE>
</FILE>

</PLUGIN>
